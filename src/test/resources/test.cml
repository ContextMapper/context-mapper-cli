/* The DDD Cargo sample application modeled in CML. Note that we split the application into multiple bounded contexts. */
ContextMap DDDSampleMap {
	contains CargoBookingContext
	contains VoyagePlanningContext
	contains LocationContext

	/* As Evans mentions in his book (Bounded Context chapter): The voyage planning can be seen as
	 * separated bounded context. However, it still shares code with the booking application (CargoBookingContext).
	 * Thus, they are in a 'Shared-Kernel' relationship.
	 */
	CargoBookingContext [SK]<->[SK] VoyagePlanningContext

	/* Note that the splitting of the LocationContext is not mentioned in the original DDD sample of Evans.
	 * However, locations and the management around them, can somehow be seen as a separated concept which is used by other
	 * bounded contexts. But this is just an example, since we want to demonstrate our DSL with multiple bounded contexts.
	 */
	CargoBookingContext <- LocationContext

	VoyagePlanningContext <- LocationContext

}

/* The original booking application context */
BoundedContext CargoBookingContext

/* We split the Voyage Planning into a separate bounded context as Evans proposes it in his book. */
BoundedContext VoyagePlanningContext

/* Separate bounded context for managing the locations. */
BoundedContext LocationContext
